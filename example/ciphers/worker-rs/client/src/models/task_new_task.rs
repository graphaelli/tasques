/*
 * Tasques API
 *
 * A Task queue backed by Elasticsearch
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TaskNewTask {
    #[serde(rename = "args", skip_serializing_if = "Option::is_none")]
    pub args: Option<serde_json::Value>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<serde_json::Value>,
    #[serde(rename = "kind")]
    pub kind: String,
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    #[serde(rename = "processing_timeout", skip_serializing_if = "Option::is_none")]
    pub processing_timeout: Option<String>,
    #[serde(rename = "queue")]
    pub queue: String,
    #[serde(rename = "retry_times", skip_serializing_if = "Option::is_none")]
    pub retry_times: Option<i32>,
    #[serde(rename = "run_at", skip_serializing_if = "Option::is_none")]
    pub run_at: Option<String>,
}

impl TaskNewTask {
    pub fn new(kind: String, queue: String) -> TaskNewTask {
        TaskNewTask {
            args: None,
            context: None,
            kind,
            priority: None,
            processing_timeout: None,
            queue,
            retry_times: None,
            run_at: None,
        }
    }
}
